{"version":3,"sources":["img/brain.png","components/js/Navigation.js","components/js/Rank.js","components/js/Logo.js","components/js/ImageLinkForm.js","components/js/FaceRecognition.js","components/js/SignIn.js","components/js/Register.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRouteChange","signedIn","react_default","a","createElement","className","onClick","Rank","name","entries","concat","Logo","tilt_default","options","max","style","height","width","src","brain","alt","ImageLinkForm","onInputChange","onButtonClick","type","placeholder","onChange","FaceRecognition","imageUrl","box","id","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signInEmail","target","value","toLowerCase","onPasswordChange","signInPassword","handleKeyPress","key","onSignInSubmit","state","fetch","method","headers","Content-Type","body","JSON","stringify","email","password","then","response","json","user","props","loadUser","window","alert","clearFields","_this2","onKeyPress","htmlFor","required","React","Component","Register","onNameChange","onRegisterSubmit","particlesOptions","particles","number","density","enable","value_area","App","data","joined","input","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","onImageDetect","console","log","count","assign","catch","err","route","particles_default","params","js_Navigation","js_Rank","js_Logo","js_ImageLinkForm","js_FaceRecognition","js_SignIn","js_Register","Boolean","location","hostname","match","ReactDOM","render","src_containers_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f81a9044.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.7467e8cb.png\";","import React from 'react';\r\nimport '../css/Navigation.css';\r\n\r\nconst Navigation = ({onRouteChange, signedIn}) => {\r\n\tif(!signedIn){\r\n\t\treturn (\r\n\t\t\t<nav className=\"navigation-bar\">\r\n\t\t\t\t<p className =\"f4 link dim black underline pa3 pointer noselect\"\r\n\t\t\t\t   onClick={() => onRouteChange('signin')}\r\n\t\t\t\t   >Sign In\r\n\t\t\t\t</p>\t\t\t\r\n\t\t\t\t<p className =\"f4 link dim black underline pa3 pointer noselect\"\r\n\t\t\t\t   onClick={() => onRouteChange('register')}\r\n\t\t\t\t   >Register\r\n\t\t\t\t</p>\r\n\t\t\t</nav>\t\t\t\r\n\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<nav className=\"navigation-bar\">\r\n\t\t\t\t<p className =\"f4 link dim black underline pa3 pointer noselect\"\r\n\t\t\t\t   onClick={() => onRouteChange('signin')}\r\n\t\t\t\t   >Sign Out\r\n\t\t\t\t</p>\r\n\t\t\t</nav>\t\t\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst Rank = ({name, entries}) => {\r\n  return (\r\n    <div>\r\n      <div className='white f4'>\r\n        {`Hello ${name}, your current entry count is...`}\r\n      </div>\r\n      <div className='white f2'>\r\n        {entries}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from '../../img/brain.png';\r\nimport '../css/Logo.css'\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t\t<div className=\"ma4 mt0 tiltbox centered\">\r\n\t\t\t<Tilt className=\"Tilt shadow-2\" options={{ max : 100 }} style={{ height: 130, width: 130 }} >\r\n\t\t\t\t <div className=\"Tilt-inner pa4 tiltbox\">\r\n\t\t\t\t \t<img className=\"noselect\" src={brain} alt=\"logo\"/>\r\n\t\t\t\t </div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport \"../css/ImageLinkForm.css\";\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonClick}) => {\r\n\treturn ( \r\n\t\t<div>\r\n\t\t\t<p className ='f3 smaller'>The <b>MagicBrain</b> will detect faces in your pictures. Give it a try!</p>\r\n\t\t\t<div className='centered smaller'>\r\n\t\t\t\t<div className='pa4 br3 custom-shadow-w form centered smaller'>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tclassName ='f4 pa2 w-70 centered ba' \r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='enter the image URL here'\r\n\t\t\t\t\t\tonChange = {onInputChange}\r\n\t\t\t\t\t/> \r\n\t\t\t\t\t<button className ='w-30 f4 link ph3 pv2 dib light bg-light-purple noselect'\r\n\t\t\t\t\t\t\tonClick ={onButtonClick} >Detect\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport \"../css/FaceRecognition.css\"\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className='centered ma'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/>\r\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nclass SignIn extends React.Component {\r\n  constructor() {\r\n    super()\r\n      this.state = {\r\n        signInEmail: '',\r\n        signInPassword: ''\r\n      }\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({signInEmail: event.target.value.toLowerCase()});\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({signInPassword: event.target.value})\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.key === 'Enter'){\r\n      this.onSignInSubmit();\r\n    }\r\n  }\r\n\r\n  onSignInSubmit = () => {\r\n    if(this.state.signInEmail && this.state.signInPassword) {\r\n      fetch('https://shielded-reaches-78464.herokuapp.com/signin', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          \"email\": this.state.signInEmail,\r\n          \"password\": this.state.signInPassword\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if(user.id){\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange('home'); //As Register is a class, it automatically receives props from App.js and (props) are accessed through this.props.\r\n        } else {\r\n          window.alert('Invalid user and/or password');\r\n          this.props.clearFields();\r\n        }\r\n      })\r\n    } else {\r\n      window.alert ('Email and Password fields should be filled in');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center form smaller\"\r\n               onKeyPress={this.handleKeyPress} \r\n      >\r\n          <main className=\"pa4 black-80\">\r\n              <div className=\"measure\">\r\n                  <fieldset id=\"sign_in\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f2 fw6 ph0 mh0 noselect\">Sign In</legend>\r\n                      <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input \r\n                          className=\"pa2 input-reset ba bg-white w-100\" \r\n                          type=\"email\" \r\n                          name=\"email-address\"  \r\n                          id=\"email-address\"\r\n                          onChange={this.onEmailChange}\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input \r\n                          className=\"pa2 input-reset ba bg-white w-100\" \r\n                          type=\"password\" \r\n                          name=\"password\"  \r\n                          id=\"password\"\r\n                          onChange={this.onPasswordChange}\r\n                          required \r\n                        />\r\n                      </div>\r\n                  </fieldset>\r\n                    <div className=\"\">\r\n                      <input\r\n                        className=\"b ph3 pv2 input-reset ba b--black bg-lightest-blue grow pointer f6 dib\" \r\n                        type=\"submit\" \r\n                        value=\"Sign in\"\r\n                        onClick={this.onSignInSubmit}                 \r\n                      />\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                      <p className=\"f5 link dim black db pointer\"\r\n                         onClick={() => this.props.onRouteChange('register')} //As SignIn is a class, it automatically \r\n                         // receives props from App.js and (props) are accessed through this.props.\r\n                      >\r\n                        Register now, it's free!\r\n                      </p>\r\n                    </div>\r\n              </div>\r\n            </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n  constructor() {\r\n    super()\r\n      this.state = {\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n      }\r\n  }\r\n\r\n  onNameChange = (event) => {\r\n    this.setState({name: event.target.value});\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({email: event.target.value.toLowerCase()});\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({password: event.target.value})\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.key === 'Enter'){\r\n      this.onRegisterSubmit();\r\n    }\r\n  }\r\n\r\n  onRegisterSubmit = () => {\r\n    if(this.state.name && this.state.email && this.state.password) {\r\n      fetch('https://shielded-reaches-78464.herokuapp.com/register', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          \"name\": this.state.name,\r\n          \"email\": this.state.email,\r\n          \"password\": this.state.password\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n          if(user.id){\r\n            this.props.loadUser(user);\r\n            this.props.onRouteChange('home'); //As Register is a class, it automatically receives props from App.js and (props) are accessed through this.props.\r\n            window.alert(`User ${user.name} succesfully registered!`)\r\n          } else {\r\n            window.alert(user);\r\n            this.props.clearFields();\r\n          }})\r\n    } else {\r\n      window.alert ('Name, Email and Password fields should be filled in!')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center form smaller\"\r\n                 onKeyPress={this.handleKeyPress}\r\n        >\r\n          <main className=\"pa4 black-80\">\r\n            <div className=\"measure\">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f2 fw6 ph0 mh0 noselect\">Register</legend>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Name</label>\r\n                  <input \r\n                    className=\"pa2 input-reset ba bg-white w-100\" \r\n                    type=\"text\" \r\n                    name=\"name\"  \r\n                    id=\"name\"\r\n                    onChange={this.onNameChange}\r\n                    required                     \r\n                  />\r\n                </div>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                  <input\r\n                    className=\"pa2 input-reset ba bg-white w-100\" \r\n                    type=\"email\" \r\n                    name=\"email-address\"  \r\n                    id=\"email-address\"\r\n                    onChange={this.onEmailChange}\r\n                    required                    \r\n                  />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                  <input \r\n                    className=\"pa2 input-reset ba bg-white w-100\" \r\n                    type=\"password\" \r\n                    name=\"password\"  \r\n                    id=\"password\"\r\n                    onChange={this.onPasswordChange}\r\n                    required                    \r\n                  />\r\n                </div>\r\n              </fieldset>\r\n              <div className=\"\">\r\n                <input\r\n                  className=\"b ph3 pv2 input-reset ba b--black bg-lightest-blue grow pointer f6 dib\" \r\n                  type=\"submit\" \r\n                  value=\"Register\"\r\n                  onClick={this.onRegisterSubmit}\r\n                />\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;","import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from '../components/js/Navigation';\nimport Rank from '../components/js/Rank';\nimport Logo from '../components/js/Logo';\nimport ImageLinkForm from '../components/js/ImageLinkForm';\nimport FaceRecognition from '../components/js/FaceRecognition';\nimport SignIn from '../components/js/SignIn';\nimport Register from '../components/js/Register';\nimport 'tachyons';\nimport './App.css';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value:50,\n      density: {\n        enable:true,\n        value_area:500,    \n      }\n    }\n  }\n}\n\nclass App extends Component {\n  // STATE DECLARATION AND INITIALIZATION\n  constructor() {\n    super()\n      this.state = {\n        input: '',\n        imageUrl: '',\n        box: {},\n        route: 'signin',\n        signedIn: false,\n        user: {\n          id:'',\n          name: '',\n          email: '',\n          entries: 0,\n          joined: ''\n        }\n      }\n  }\n\n  // CALLED EVERYTIME A USER LOGS IN\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }});\n  }\n\n  // TRIGGERED EVERYTIME INPUT CHANGES\n  onInputChange = (event) => {\n    // ** Set input to user value\n      this.setState({input: event.target.value})\n  }\n\n  // Function used to calculate boundig box boundaries\n  calculateFaceLocation = response => {\n    const clarifaiFace = response.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return ({\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - (clarifaiFace.right_col * width),\n        bottomRow: height - (clarifaiFace.bottom_row * height)\n    });\n  }\n\n  displayFaceBox = box => {\n    this.setState({box: box});\n  }\n\n  // TRIGGERED EVERYTIME DETECT BUTTON IS CLICKED\n  // app.models.predit is an asynchronous Clarifai syntax\n  onImageDetect = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch('https://shielded-reaches-78464.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n    .then(response => response.json())\n    .then(response => {\n      console.log(response);\n      if (response.outputs) {\n        fetch('https://shielded-reaches-78464.herokuapp.com/image', {\n          method: 'PUT',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            \"id\": this.state.user.id\n        })})\n          .then(response => response.json())\n          .then(count => this.setState(Object.assign(this.state.user, {entries: count})))\n          .catch(console.log);\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch((err) => {\n      window.alert('Please submit a valid image URL!');\n    }); \n  }\n\n  onRouteChange = (route) => {\n    route==='home' ? this.setState({signedIn: true}) : this.setState({signedIn: false});\n    this.setState({route: route});\n    this.setState({imageUrl: ''});\n  }\n\n  clearFields = () => {\n    if(document.getElementById('name')) {\n      document.getElementById('name').value='';\n    }\n    document.getElementById('email-address').value='';\n    document.getElementById('password').value='';\n  }\n\n  render() {\n  \treturn (\n  \t  \t<div className=\"App\">\n  \t  \t    <Particles className='particles'\n            \t\tparams={particlesOptions}\n          \t/>\n  \t\t    <Navigation onRouteChange={this.onRouteChange}\n                      signedIn={this.state.signedIn}\n          />\n          { this.state.route === 'home' ?\n              <div>\n                <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n                <Logo />\n                <ImageLinkForm onInputChange={this.onInputChange} \n                               onButtonClick={this.onImageDetect}\n                />\n                <FaceRecognition imageUrl={this.state.imageUrl}\n                                 box={this.state.box}\n                />\n              </div>  \n    \t\t      : this.state.route === 'signin' ?\n                <SignIn loadUser={this.loadUser} \n                        onRouteChange={this.onRouteChange} \n                        clearFields={this.clearFields}\n                        handleKeyPress={this.handleKeyPress}\n                />\n              : \n                <Register loadUser ={this.loadUser} \n                          onRouteChange={this.onRouteChange} \n                          clearFields={this.clearFields}\n                          handleKeyPress={this.handleKeyPress}\n                />\n          }\n    \t\t</div>            \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}