{"version":3,"sources":["assets/images/brain.png","components/Buttons/NavigationButton/index.js","components/Buttons/NavigationButton/navigation-button.component.jsx","components/Header/index.js","components/Header/header.component.jsx","components/ErrorDisplay/index.js","components/ErrorDisplay/error-display.component.jsx","components/FaceRecognition/face-recognition.component.jsx","components/FaceRecognition/index.js","components/Inputs/ImageLinkForm/index.js","components/Inputs/ImageLinkForm/image-link-form.component.jsx","components/Logo/index.js","components/Logo/logo.component.jsx","components/Rank/index.js","components/Rank/rank.component.jsx","utils/api.utils.js","utils/functions.utils.js","pages/Home/home.page.jsx","pages/Home/index.js","pages/NotFound/index.js","pages/NotFound/not-found.page.jsx","utils/constants.utils.js","components/Buttons/FormButton/form-button.component.jsx","components/Buttons/FormButton/index.js","components/Inputs/FormInput/form-input-component.jsx","components/Inputs/FormInput/index.js","components/UserForm/index.js","components/UserForm/user-form.component.jsx","pages/Register/index.js","pages/Register/register.page.jsx","pages/SignIn/index.js","pages/SignIn/sign-in.page.jsx","App/App.jsx","index.jsx"],"names":["module","exports","NavigationButton","onClick","children","className","type","Header","isUserSignedIn","clearUser","history","useHistory","navigateToSignIn","push","localStorage","clear","ErrorDisplay","error","role","FaceRecognition","box","imageUrl","loading","active","spinner","id","alt","src","width","data-testid","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","defaultProps","ImageLinkForm","onFormSubmit","useState","imageInput","setImageInput","htmlFor","onSubmit","event","preventDefault","placeholder","onChange","target","value","disabled","Logo","options","max","height","brain","Rank","name","entries","fetchServer","path","method","headers","body","fetch","process","JSON","stringify","signInUser","email","password","then","response","json","registerUser","getImageBoundary","input","updateImageCount","setUserOnLocalStorage","userData","setItem","capitalizeFirstLetter","string","toUpperCase","slice","BOX_INITIAL_STATE","Home","user","setUser","setBox","setImageUrl","setError","setLoading","calculateFaceLocation","clarifaiFace","outputs","data","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","onImageDetect","a","unstable_batchedUpdates","api","count","facePosition","catch","NotFound","PARTICLE_OPTIONS","particles","number","density","enable","value_area","INPUT_INITIAL_STATE","isValid","errorText","showError","EMAIL_REGEX_KEY","FormButton","isValidForm","validClass","getIsValidFormClass","FormInput","errorData","isTopInput","onBlur","UserForm","fields","loadUser","isSignInForm","fieldsList","Object","values","every","field","onFieldChange","fieldName","length","test","String","toLowerCase","isFieldValid","setField","validateInput","fieldValues","reduce","acc","map","key","Register","setName","setEmail","setPassword","SignIn","INITIAL_USER_DATA","joined","App","useEffect","loggedInUser","getItem","foundUser","parse","params","exact","to","render","pathname","component","ReactDOM"],"mappings":"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","file":"static/js/main.7c7cc98f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.7467e8cb.png\";","import NavigationButton from './navigation-button.component';\n\nexport default NavigationButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NavigationButton = ({ onClick, children }) => (\n  <button className=\"f4 link black pv2 ma3 b--none bg-transparent\" onClick={onClick} type=\"button\">\n    {children}\n  </button>\n);\n\nNavigationButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n};\n\nexport default NavigationButton;\n","import Header from './header.component';\n\nexport default Header;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport NavigationButton from '../Buttons/NavigationButton';\n\nconst Header = ({ isUserSignedIn, clearUser }) => {\n  const history = useHistory();\n\n  const navigateToRegister = () => history.push('/register');\n  const navigateToSignIn = () => history.push('/signin');\n  const logout = () => {\n    clearUser();\n    localStorage.clear();\n    navigateToSignIn();\n  };\n\n  return (\n    <nav className=\"flex justify-end\">\n      {isUserSignedIn ? (\n        <NavigationButton onClick={logout}>Sign Out</NavigationButton>\n      ) : (\n        <div>\n          <NavigationButton onClick={navigateToSignIn}>Sign In</NavigationButton>\n          <NavigationButton onClick={navigateToRegister}>Register</NavigationButton>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nHeader.propTypes = {\n  clearUser: PropTypes.func.isRequired,\n  isUserSignedIn: PropTypes.bool.isRequired,\n};\n\nexport default Header;\n","import ErrorDisplay from './error-display.component';\n\nexport default ErrorDisplay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ErrorDisplay = ({ error }) => (\n  <p className=\"red f6 mv3 pa3 right-0 left-0 b bg-light-pink ba b--red br2\" role=\"alert\">\n    {error}\n  </p>\n);\n\nErrorDisplay.propTypes = {\n  error: PropTypes.string.isRequired,\n};\n\nexport default ErrorDisplay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LoadingOverlay from 'react-loading-overlay';\n\nimport ErrorDisplay from '../ErrorDisplay';\n\nimport './face-recognition.styles.css';\n\nconst FaceRecognition = ({ box, error, imageUrl, loading }) => (\n  <div className=\"centered\">\n    <div className=\"absolute mt2\">\n      <div className=\"mb2\">\n        <LoadingOverlay active={loading} spinner>\n          {!error && <img id=\"input-image\" alt=\"\" src={imageUrl} width=\"460\" />}\n          <div\n            data-testid=\"face-location\"\n            className=\"bounding-box\"\n            style={{\n              top: box.topRow,\n              right: box.rightCol,\n              bottom: box.bottomRow,\n              left: box.leftCol,\n            }}\n          />\n        </LoadingOverlay>\n      </div>\n      {error && <ErrorDisplay error={error} />}\n    </div>\n  </div>\n);\n\nFaceRecognition.propTypes = {\n  box: PropTypes.shape({\n    topRow: PropTypes.number,\n    bottomRow: PropTypes.number,\n    rightCol: PropTypes.number,\n    leftCol: PropTypes.number,\n  }),\n  error: PropTypes.string,\n  imageUrl: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nFaceRecognition.defaultProps = {\n  box: {},\n  error: null,\n};\n\nexport default FaceRecognition;\n","import FaceRecognition from './face-recognition.component';\n\nexport default FaceRecognition;\n","import ImageLinkForm from './image-link-form.component';\n\nexport default ImageLinkForm;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './image-link-form.styles.css';\n\nconst IMAGE_LINK_FORM = 'image-link-form';\n\nconst ImageLinkForm = ({ onFormSubmit }) => {\n  const [imageInput, setImageInput] = useState('');\n\n  const onInputChange = (event) => {\n    setImageInput(event.target.value);\n  };\n\n  const onInputSubmit = (event) => {\n    event.preventDefault();\n    onFormSubmit(imageInput);\n  };\n\n  return (\n    <label className=\"f3\" htmlFor={IMAGE_LINK_FORM}>\n      The <b>MagicBrain</b> will detect faces in your pictures. Give it a try!\n      <form\n        className=\"pa4 br3 mt3 custom-shadow-w form smaller center\"\n        id={IMAGE_LINK_FORM}\n        data-testid={IMAGE_LINK_FORM}\n        onSubmit={onInputSubmit}\n      >\n        <input\n          className=\"f4 pa2 w-70 ba\"\n          type=\"text\"\n          placeholder=\"enter the image URL here\"\n          onChange={onInputChange}\n        />\n        <button\n          className=\"w-30 f4 link ph3 pv2 dib light bg-light-purple noselect\"\n          type=\"submit\"\n          disabled={!imageInput}\n        >\n          Detect\n        </button>\n      </form>\n    </label>\n  );\n};\n\nImageLinkForm.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n};\n\nexport default ImageLinkForm;\n","import Logo from './logo.component';\n\nexport default Logo;\n","import React from 'react';\nimport Tilt from 'react-tilt';\n\nimport './logo.styles.css';\nimport brain from '../../assets/images/brain.png';\n\nconst Logo = () => (\n  <div className=\"ma4 mt0 tiltbox centered\">\n    <Tilt className=\"Tilt shadow-2\" options={{ max: 100 }} style={{ height: 130, width: 130 }}>\n      <div className=\"Tilt-inner pa4 tiltbox\">\n        <img className=\"noselect\" src={brain} alt=\"logo\" />\n      </div>\n    </Tilt>\n  </div>\n);\n\nexport default Logo;\n","import Rank from './rank.component';\n\nexport default Rank;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Rank = ({ name, entries }) => (\n  <div>\n    <div className=\"white f4\">{`Hello ${name}, your current entry count is...`}</div>\n    <div className=\"white f2\" data-testid=\"user-entries\">\n      {entries}\n    </div>\n  </div>\n);\n\nRank.propTypes = {\n  name: PropTypes.string.isRequired,\n  entries: PropTypes.number.isRequired,\n};\n\nexport default Rank;\n","const { REACT_APP_API_ENDPOINT } = process.env;\n\nconst fetchServer = ({\n  path,\n  method = 'POST',\n  headers = { 'Content-Type': 'application/json' },\n  body,\n}) =>\n  fetch(`${REACT_APP_API_ENDPOINT}${path}`, {\n    method,\n    headers,\n    body: JSON.stringify({ ...body }),\n  });\n\nexport default {\n  signInUser: ({ email, password }) =>\n    fetchServer({ path: '/signin', body: { email, password } }).then((response) => response.json()),\n\n  registerUser: ({ name, email, password }) =>\n    fetchServer({ path: '/register', body: { name, email, password } }).then((response) =>\n      response.json()\n    ),\n\n  getImageBoundary: ({ input }) =>\n    fetchServer({ path: '/imageurl', body: { input } }).then((response) => response.json()),\n\n  updateImageCount: ({ id }) =>\n    fetchServer({ path: '/image', method: 'PUT', body: { id } }).then((response) =>\n      response.json()\n    ),\n};\n","export const getUserFromLocalStorage = () => localStorage.getItem('user');\nexport const setUserOnLocalStorage = (userData) =>\n  localStorage.setItem('user', JSON.stringify(userData));\n\nexport const capitalizeFirstLetter = (string) => string[0].toUpperCase() + string.slice(1);\n","import React, { useState } from 'react';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport FaceRecognition from '../../components/FaceRecognition';\nimport ImageLinkForm from '../../components/Inputs/ImageLinkForm';\nimport Logo from '../../components/Logo';\nimport Rank from '../../components/Rank';\nimport api from '../../utils/api.utils';\nimport { setUserOnLocalStorage } from '../../utils/functions.utils';\n\nconst BOX_INITIAL_STATE = {};\n\nconst Home = ({ user, setUser }) => {\n  const [box, setBox] = useState(BOX_INITIAL_STATE);\n  const [imageUrl, setImageUrl] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { id, name, entries } = user;\n\n  const calculateFaceLocation = (response) => {\n    const clarifaiFace = response.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('input-image');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  const onImageDetect = async (input) => {\n    unstable_batchedUpdates(() => {\n      if (error) setError(null);\n      setLoading(true);\n      setBox(BOX_INITIAL_STATE);\n      setImageUrl(input);\n    });\n    await api\n      .getImageBoundary({ input })\n      .then((response) => {\n        if (response.outputs) {\n          api.updateImageCount({ id }).then((data) => {\n            if (data.count) {\n              const userData = { ...user, entries: Number(data.count) };\n              setUser(userData);\n              setUserOnLocalStorage(userData);\n              const facePosition = calculateFaceLocation(response);\n              setBox({ ...facePosition });\n            } else {\n              setError(data.error);\n            }\n          });\n        } else {\n          setError(response.error);\n        }\n      })\n      .catch(() => setError('Something went wrong. Please try again later.'));\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <Rank name={name} entries={entries} />\n      <Logo />\n      <ImageLinkForm onFormSubmit={onImageDetect} />\n      {imageUrl && (\n        <FaceRecognition box={box} error={error} imageUrl={imageUrl} loading={loading} />\n      )}\n    </div>\n  );\n};\n\nHome.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    email: PropTypes.string,\n    entries: PropTypes.number,\n    joined: PropTypes.string,\n  }).isRequired,\n  setUser: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","import Home from './home.page';\n\nexport default Home;\n","import NotFound from './not-found.page';\n\nexport default NotFound;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport './not-found.styles.css';\n\nconst NotFound = () => {\n  const history = useHistory();\n  return (\n    <div className=\"f3 fw6 pt6 pr6 pl6 black-80\">\n      <h1>Oooooppssss.......</h1>\n      <h3>You were not supposed to see this!</h3>\n      <h5>\n        Click{' '}\n        <button type=\"button\" className=\"link-button\" onClick={() => history.push('/')}>\n          here\n        </button>{' '}\n        to go back\n      </h5>\n    </div>\n  );\n};\nexport default NotFound;\n","export const PARTICLE_OPTIONS = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 500,\n      },\n    },\n  },\n};\n\nexport const INPUT_INITIAL_STATE = {\n  value: '',\n  isValid: false,\n  errorText: '',\n  showError: false,\n};\n\nexport const EMAIL = 'email';\nexport const PASSWORD = 'password';\n\nexport const NAME_ERROR_MESSAGE = 'Name cannot be empty';\nexport const EMAIL_ERROR_MESSAGE = 'Please enter a valid email address';\nexport const PASSWORD_ERROR_MESSAGE = 'Your password must be at least 6 characters long';\n\nexport const EMAIL_REGEX_KEY = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FormButton = ({ children, isValidForm, disabled }) => {\n  const getIsValidFormClass = (isValidForm) => (isValidForm ? 'b bg-lightest-blue grow' : '');\n\n  const validClass = getIsValidFormClass(isValidForm);\n\n  return (\n    <button\n      className={`ph3 pv2 mt3 ba b--black f6 dib ${validClass}`}\n      type=\"submit\"\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n\nFormButton.propTypes = {\n  isValidForm: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  disabled: PropTypes.bool,\n};\n\nFormButton.defaultProps = {\n  isValidForm: false,\n  disabled: false,\n};\n\nexport default FormButton;\n","import FormButton from './form-button.component';\n\nexport default FormButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { capitalizeFirstLetter } from '../../../utils/functions.utils';\n\nconst FormInput = ({ name, type, errorData, isTopInput, onChange, onBlur }) => {\n  const { errorText, showError } = errorData;\n  const errorClass = () => (showError ? 'b--red' : '');\n\n  return (\n    <div className={!isTopInput ? 'mt4' : ''} data-testid=\"form-input\">\n      <label className=\"db fw6 lh-copy mv2\" htmlFor={name}>\n        {capitalizeFirstLetter(name)}\n        <input\n          data-testid={`${name}-input`}\n          className={`pa2 mb0 ba bg-white w-100 br2 ${errorClass}`}\n          type={type}\n          name={name}\n          id={name}\n          onChange={(event) => onChange(name, event)}\n          onBlur={() => onBlur(name)}\n        />\n        {showError && (\n          <p className=\"red f6 absolute mv0 right-0 left-0\" role=\"alert\">\n            {errorText}\n          </p>\n        )}\n      </label>\n    </div>\n  );\n};\n\nFormInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  errorData: PropTypes.shape({\n    showError: PropTypes.bool,\n    errorText: PropTypes.string,\n  }).isRequired,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  isTopInput: PropTypes.bool,\n};\n\nFormInput.defaultProps = {\n  type: 'text',\n  onChange: () => {},\n  onBlur: () => {},\n  isTopInput: false,\n};\n\nexport default FormInput;\n","import FormInput from './form-input-component';\n\nexport default FormInput;\n","import UserForm from './user-form.component';\n\nexport default UserForm;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport api from '../../utils/api.utils';\nimport { EMAIL_REGEX_KEY } from '../../utils/constants.utils';\nimport { capitalizeFirstLetter, setUserOnLocalStorage } from '../../utils/functions.utils';\n\nimport ErrorDisplay from '../ErrorDisplay';\nimport FormButton from '../Buttons/FormButton';\nimport FormInput from '../Inputs/FormInput';\n\nconst UserForm = ({ fields, type, loadUser }) => {\n  const isSignInForm = type === 'sign in';\n  const history = useHistory();\n  const [error, setError] = useState(null);\n  const fieldsList = Object.values(fields);\n\n  const isValidForm = fieldsList.every((field) => field.isValid);\n\n  const isFieldValid = (fieldName, value) => {\n    const validators = {\n      name: value.length > 0,\n      email: EMAIL_REGEX_KEY.test(String(value).toLowerCase()),\n      password: value.length >= 6,\n    };\n\n    return validators[fieldName];\n  };\n\n  const onFieldChange = (fieldName, event) => {\n    const input = fields[fieldName];\n    const isValid = isFieldValid(fieldName, event.target.value);\n    fields[fieldName].setField({\n      ...input,\n      value: event.target.value,\n      isValid,\n      showError: input.showError && !isValid,\n    });\n  };\n\n  const validateInput = (fieldName) => {\n    const input = fields[fieldName];\n    fields[fieldName].setField({ ...input, showError: !input.isValid });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    const fieldValues = fieldsList.reduce(\n      (acc, field) => ({ ...acc, [field.name]: field.value }),\n      {}\n    );\n    const submitAction = isSignInForm ? api.signInUser : api.registerUser;\n    submitAction(fieldValues)\n      .then((response) => {\n        if (response?.id) {\n          loadUser(response);\n          setUserOnLocalStorage(response);\n        } else {\n          setError(response.error);\n        }\n      })\n      .catch(() => setError('Something went wrong. Please try again later.'));\n  };\n\n  return (\n    <form\n      className=\"br3 ba b--black-10 mv4 mw6 shadow-5 center smaller\"\n      onSubmit={onSubmit}\n      data-testid=\"user-form\"\n    >\n      <main className=\"pv3 ph4 black-80\">\n        <fieldset id=\"sign-in\" className=\"ba b--transparent ph0 mh0\">\n          <h2 className=\"f2 ph0 ma0 noselect\">{capitalizeFirstLetter(type)}</h2>\n          {error && <ErrorDisplay error={error} />}\n          {fieldsList.map((field) => {\n            const { name, id, type, showError, errorText } = field;\n            return (\n              <FormInput\n                key={id}\n                name={name}\n                type={type}\n                errorData={{ showError: showError, errorText: errorText }}\n                isTopInput={id === 1}\n                onChange={onFieldChange}\n                onBlur={validateInput}\n              />\n            );\n          })}\n        </fieldset>\n        <div className=\"flex flex-column items-center\">\n          <FormButton isValidForm={isValidForm} disabled={!isValidForm}>\n            {capitalizeFirstLetter(type)}\n          </FormButton>\n          {isSignInForm && (\n            <button\n              className=\"f5 dim black lh-copy mt3 link b--none bg-transparent\"\n              type=\"button\"\n              onClick={() => history.push('/register')}\n            >\n              Register now, it's free!\n            </button>\n          )}\n        </div>\n      </main>\n    </form>\n  );\n};\n\nUserForm.propTypes = {\n  fields: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      errorText: PropTypes.string,\n      value: PropTypes.string,\n      isValid: PropTypes.bool,\n      showError: PropTypes.bool,\n      type: PropTypes.string,\n      setField: PropTypes.func,\n    })\n  ).isRequired,\n  type: PropTypes.string.isRequired,\n  loadUser: PropTypes.func.isRequired,\n};\n\nexport default UserForm;\n","import Register from './register.page';\n\nexport default Register;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  EMAIL,\n  PASSWORD,\n  INPUT_INITIAL_STATE,\n  NAME_ERROR_MESSAGE,\n  EMAIL_ERROR_MESSAGE,\n  PASSWORD_ERROR_MESSAGE,\n} from '../../utils/constants.utils';\n\nimport UserForm from '../../components/UserForm';\n\nconst Register = ({ loadUser }) => {\n  const [name, setName] = useState({ ...INPUT_INITIAL_STATE, errorText: NAME_ERROR_MESSAGE });\n  const [email, setEmail] = useState({\n    ...INPUT_INITIAL_STATE,\n    errorText: EMAIL_ERROR_MESSAGE,\n  });\n  const [password, setPassword] = useState({\n    ...INPUT_INITIAL_STATE,\n    errorText: PASSWORD_ERROR_MESSAGE,\n  });\n\n  const fields = {\n    name: {\n      id: 1,\n      name: 'name',\n      ...name,\n      type: 'text',\n      setField: setName,\n    },\n    email: {\n      id: 2,\n      name: EMAIL,\n      ...email,\n      type: EMAIL,\n      setField: setEmail,\n    },\n    password: {\n      id: 3,\n      name: PASSWORD,\n      ...password,\n      type: PASSWORD,\n      setField: setPassword,\n    },\n  };\n\n  return <UserForm fields={fields} type=\"register\" loadUser={loadUser} />;\n};\n\nRegister.propTypes = {\n  loadUser: PropTypes.func.isRequired,\n};\n\nexport default Register;\n","import SignIn from './sign-in.page';\n\nexport default SignIn;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  EMAIL,\n  PASSWORD,\n  INPUT_INITIAL_STATE,\n  EMAIL_ERROR_MESSAGE,\n  PASSWORD_ERROR_MESSAGE,\n} from '../../utils/constants.utils';\n\nimport UserForm from '../../components/UserForm';\n\nconst SignIn = ({ loadUser }) => {\n  const [email, setEmail] = useState({\n    ...INPUT_INITIAL_STATE,\n    errorText: EMAIL_ERROR_MESSAGE,\n  });\n\n  const [password, setPassword] = useState({\n    ...INPUT_INITIAL_STATE,\n    errorText: PASSWORD_ERROR_MESSAGE,\n  });\n\n  const fields = {\n    email: {\n      id: 1,\n      name: EMAIL,\n      ...email,\n      type: EMAIL,\n      setField: setEmail,\n    },\n    password: {\n      id: 2,\n      name: PASSWORD,\n      ...password,\n      type: PASSWORD,\n      setField: setPassword,\n    },\n  };\n  return <UserForm fields={fields} type=\"sign in\" loadUser={loadUser} />;\n};\n\nSignIn.propTypes = {\n  loadUser: PropTypes.func.isRequired,\n};\n\nexport default SignIn;\n","import React, { useState, useEffect } from 'react';\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport Particles from 'react-particles-js';\n\nimport Header from '../components/Header';\nimport Home from '../pages/Home';\nimport NotFound from '../pages/NotFound';\nimport Register from '../pages/Register';\nimport SignIn from '../pages/SignIn';\nimport { PARTICLE_OPTIONS } from '../utils/constants.utils';\nimport { getUserFromLocalStorage } from '../utils/functions.utils';\nimport 'tachyons';\nimport './App.css';\n\nconst INITIAL_USER_DATA = {\n  id: 0,\n  name: '',\n  email: '',\n  entries: 0,\n  joined: '',\n};\n\nconst App = () => {\n  const [user, setUser] = useState(INITIAL_USER_DATA);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const loggedInUser = getUserFromLocalStorage();\n    if (loggedInUser) {\n      const foundUser = JSON.parse(loggedInUser);\n      setUser({ ...foundUser, entries: Number(foundUser.entries) });\n      history.push('/home');\n    }\n  }, [history]);\n\n  const loadUser = (data) => {\n    setUser({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: Number(data.entries),\n      joined: data.joined,\n    });\n    history.push('/home');\n  };\n\n  const clearUser = () => setUser(INITIAL_USER_DATA);\n\n  const isUserSignedIn = !!user.id;\n\n  return (\n    <div className=\"App\">\n      <Particles className=\"particles\" params={PARTICLE_OPTIONS} />\n      <Header isUserSignedIn={isUserSignedIn} clearUser={clearUser} />\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to={isUserSignedIn ? '/home' : '/signin'} />\n        </Route>\n        <Route path=\"/signin\" render={() => <SignIn loadUser={loadUser} />} />\n        <Route path=\"/register\" render={() => <Register loadUser={loadUser} />} />\n        <Route\n          path=\"/home\"\n          render={() =>\n            isUserSignedIn ? (\n              <Home user={user} setUser={setUser} />\n            ) : (\n              <Redirect to={{ pathname: '/signin' }} />\n            )\n          }\n        />\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}