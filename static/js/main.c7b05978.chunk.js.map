{"version":3,"sources":["assets/images/brain.png","components/Buttons/NavigationButton/index.js","components/Buttons/NavigationButton/navigation-button.component.jsx","components/Header/index.js","components/Header/header.component.jsx","components/ErrorDisplay/index.js","components/ErrorDisplay/error-display.component.jsx","components/FaceRecognition/face-recognition.component.jsx","components/FaceRecognition/index.js","components/Inputs/ImageLinkForm/index.js","components/Inputs/ImageLinkForm/image-link-form.component.jsx","components/Logo/index.js","components/Logo/logo.component.jsx","components/Rank/index.js","components/Rank/rank.component.jsx","utils/api.utils.js","utils/functions.utils.js","pages/Home/home.page.jsx","pages/Home/index.js","pages/NotFound/index.js","pages/NotFound/not-found.page.jsx","utils/constants.utils.js","components/Buttons/FormButton/form-button.component.jsx","components/Buttons/FormButton/index.js","components/Inputs/FormInput/form-input-component.jsx","components/Inputs/FormInput/index.js","components/UserForm/index.js","components/UserForm/user-form.component.jsx","pages/Register/index.js","pages/Register/register.page.jsx","pages/SignIn/index.js","pages/SignIn/sign-in.page.jsx","App/App.jsx","index.jsx"],"names":["module","exports","__webpack_require__","p","NavigationButton","_ref","onClick","children","react_default","a","createElement","className","type","Header","isUserSignedIn","clearUser","history","useHistory","navigateToSignIn","push","Buttons_NavigationButton","localStorage","clear","ErrorDisplay","error","role","FaceRecognition","box","imageUrl","loading","LoadingOverlay_default","active","spinner","id","alt","src","width","data-testid","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","components_ErrorDisplay","defaultProps","ImageLinkForm","onFormSubmit","_useState","useState","_useState2","Object","slicedToArray","imageInput","setImageInput","htmlFor","onSubmit","event","preventDefault","placeholder","onChange","target","value","disabled","Logo","tilt_default","options","max","height","brain","Rank","name","entries","concat","fetchServer","path","_ref$method","method","_ref$headers","headers","Content-Type","body","fetch","process","JSON","stringify","objectSpread2","api_utils","signInUser","_ref2","email","password","then","response","json","registerUser","_ref3","getImageBoundary","_ref4","input","updateImageCount","_ref5","setUserOnLocalStorage","userData","setItem","capitalizeFirstLetter","string","toUpperCase","slice","BOX_INITIAL_STATE","Home","user","setUser","setBox","_useState3","_useState4","setImageUrl","_useState5","_useState6","setError","_useState7","_useState8","setLoading","calculateFaceLocation","clarifaiFace","outputs","data","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","onImageDetect","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","unstable_batchedUpdates","api","count","facePosition","catch","stop","_x","apply","this","arguments","components_Rank","components_Logo","Inputs_ImageLinkForm","components_FaceRecognition","NotFound","PARTICLE_OPTIONS","particles","number","density","enable","value_area","INPUT_INITIAL_STATE","isValid","errorText","showError","EMAIL_REGEX_KEY","FormButton","isValidForm","validClass","getIsValidFormClass","FormInput","errorData","isTopInput","onBlur","UserForm","fields","loadUser","isSignInForm","fieldsList","values","every","field","onFieldChange","fieldName","length","test","String","toLowerCase","isFieldValid","setField","validateInput","fieldValues","reduce","acc","defineProperty","map","Inputs_FormInput","key","Buttons_FormButton","Register","setName","setEmail","setPassword","components_UserForm","SignIn","INITIAL_USER_DATA","joined","App","useEffect","loggedInUser","getItem","foundUser","parse","particles_default","params","components_Header","react_router","exact","to","render","pages_SignIn","pages_Register","pages_Home","pathname","component","ReactDOM","react_router_dom","src_App_App"],"mappings":"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","file":"static/js/main.c7b05978.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.7467e8cb.png\";","import NavigationButton from './navigation-button.component';\n\nexport default NavigationButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NavigationButton = ({ onClick, children }) => (\n  <button className=\"f4 link black pv2 ma3 b--none bg-transparent\" onClick={onClick} type=\"button\">\n    {children}\n  </button>\n);\n\nNavigationButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n};\n\nexport default NavigationButton;\n","import Header from './header.component';\n\nexport default Header;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport NavigationButton from '../Buttons/NavigationButton';\n\nconst Header = ({ isUserSignedIn, clearUser }) => {\n  const history = useHistory();\n\n  const navigateToRegister = () => history.push('/register');\n  const navigateToSignIn = () => history.push('/signin');\n  const logout = () => {\n    clearUser();\n    localStorage.clear();\n    navigateToSignIn();\n  };\n\n  return (\n    <nav className=\"flex justify-end\">\n      {isUserSignedIn ? (\n        <NavigationButton onClick={logout}>Sign Out</NavigationButton>\n      ) : (\n        <div>\n          <NavigationButton onClick={navigateToSignIn}>Sign In</NavigationButton>\n          <NavigationButton onClick={navigateToRegister}>Register</NavigationButton>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nHeader.propTypes = {\n  clearUser: PropTypes.func.isRequired,\n  isUserSignedIn: PropTypes.bool.isRequired,\n};\n\nexport default Header;\n","import ErrorDisplay from './error-display.component';\n\nexport default ErrorDisplay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ErrorDisplay = ({ error }) => (\n  <p className=\"red f6 mv3 pa3 right-0 left-0 b bg-light-pink ba b--red br2\" role=\"alert\">\n    {error}\n  </p>\n);\n\nErrorDisplay.propTypes = {\n  error: PropTypes.string.isRequired,\n};\n\nexport default ErrorDisplay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LoadingOverlay from 'react-loading-overlay';\n\nimport ErrorDisplay from '../ErrorDisplay';\n\nimport './face-recognition.styles.css';\n\nconst FaceRecognition = ({ box, error, imageUrl, loading }) => (\n  <div className=\"centered\">\n    <div className=\"absolute mt2\">\n      <div className=\"mb2\">\n        <LoadingOverlay active={loading} spinner>\n          {!error && <img id=\"input-image\" alt=\"\" src={imageUrl} width=\"460\" />}\n          <div\n            data-testid=\"face-location\"\n            className=\"bounding-box\"\n            style={{\n              top: box.topRow,\n              right: box.rightCol,\n              bottom: box.bottomRow,\n              left: box.leftCol,\n            }}\n          />\n        </LoadingOverlay>\n      </div>\n      {error && <ErrorDisplay error={error} />}\n    </div>\n  </div>\n);\n\nFaceRecognition.propTypes = {\n  box: PropTypes.shape({\n    topRow: PropTypes.number,\n    bottomRow: PropTypes.number,\n    rightCol: PropTypes.number,\n    leftCol: PropTypes.number,\n  }),\n  error: PropTypes.string,\n  imageUrl: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nFaceRecognition.defaultProps = {\n  box: {},\n  error: null,\n};\n\nexport default FaceRecognition;\n","import FaceRecognition from './face-recognition.component';\n\nexport default FaceRecognition;\n","import ImageLinkForm from './image-link-form.component';\n\nexport default ImageLinkForm;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './image-link-form.styles.css';\n\nconst IMAGE_LINK_FORM = 'image-link-form';\n\nconst ImageLinkForm = ({ onFormSubmit }) => {\n  const [imageInput, setImageInput] = useState('');\n\n  const onInputChange = (event) => {\n    setImageInput(event.target.value);\n  };\n\n  const onInputSubmit = (event) => {\n    event.preventDefault();\n    onFormSubmit(imageInput);\n  };\n\n  return (\n    <label className=\"f3\" htmlFor={IMAGE_LINK_FORM}>\n      The <b>MagicBrain</b> will detect faces in your pictures. Give it a try!\n      <form\n        className=\"pa4 br3 mt3 custom-shadow-w form smaller center\"\n        id={IMAGE_LINK_FORM}\n        data-testid={IMAGE_LINK_FORM}\n        onSubmit={onInputSubmit}\n      >\n        <input\n          className=\"f4 pa2 w-70 ba\"\n          type=\"text\"\n          placeholder=\"enter the image URL here\"\n          onChange={onInputChange}\n        />\n        <button\n          className=\"w-30 f4 link ph3 pv2 dib light bg-light-purple noselect\"\n          type=\"submit\"\n          disabled={!imageInput}\n        >\n          Detect\n        </button>\n      </form>\n    </label>\n  );\n};\n\nImageLinkForm.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n};\n\nexport default ImageLinkForm;\n","import Logo from './logo.component';\n\nexport default Logo;\n","import React from 'react';\nimport Tilt from 'react-tilt';\n\nimport './logo.styles.css';\nimport brain from '../../assets/images/brain.png';\n\nconst Logo = () => (\n  <div className=\"ma4 mt0 tiltbox centered\">\n    <Tilt className=\"Tilt shadow-2\" options={{ max: 100 }} style={{ height: 130, width: 130 }}>\n      <div className=\"Tilt-inner pa4 tiltbox\">\n        <img className=\"noselect\" src={brain} alt=\"logo\" />\n      </div>\n    </Tilt>\n  </div>\n);\n\nexport default Logo;\n","import Rank from './rank.component';\n\nexport default Rank;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Rank = ({ name, entries }) => (\n  <div>\n    <div className=\"white f4\">{`Hello ${name}, your current entry count is...`}</div>\n    <div className=\"white f2\" data-testid=\"user-entries\">\n      {entries}\n    </div>\n  </div>\n);\n\nRank.propTypes = {\n  name: PropTypes.string.isRequired,\n  entries: PropTypes.number.isRequired,\n};\n\nexport default Rank;\n","const { REACT_APP_API_ENDPOINT } = process.env;\n\nconst fetchServer = ({\n  path,\n  method = 'POST',\n  headers = { 'Content-Type': 'application/json' },\n  body,\n}) =>\n  fetch(`${REACT_APP_API_ENDPOINT}${path}`, {\n    method,\n    headers,\n    body: JSON.stringify({ ...body }),\n  });\n\nexport default {\n  signInUser: ({ email, password }) =>\n    fetchServer({ path: '/signin', body: { email, password } }).then((response) => response.json()),\n\n  registerUser: ({ name, email, password }) =>\n    fetchServer({ path: '/register', body: { name, email, password } }).then((response) =>\n      response.json()\n    ),\n\n  getImageBoundary: ({ input }) =>\n    fetchServer({ path: '/imageurl', body: { input } }).then((response) => response.json()),\n\n  updateImageCount: ({ id }) =>\n    fetchServer({ path: '/image', method: 'PUT', body: { id } }).then((response) =>\n      response.json()\n    ),\n};\n","export const getUserFromLocalStorage = () => localStorage.getItem('user');\nexport const setUserOnLocalStorage = (userData) =>\n  localStorage.setItem('user', JSON.stringify(userData));\n\nexport const capitalizeFirstLetter = (string) => string[0].toUpperCase() + string.slice(1);\n","import React, { useState } from 'react';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport FaceRecognition from '../../components/FaceRecognition';\nimport ImageLinkForm from '../../components/Inputs/ImageLinkForm';\nimport Logo from '../../components/Logo';\nimport Rank from '../../components/Rank';\nimport api from '../../utils/api.utils';\nimport { setUserOnLocalStorage } from '../../utils/functions.utils';\n\nconst BOX_INITIAL_STATE = {};\n\nconst Home = ({ user, setUser }) => {\n  const [box, setBox] = useState(BOX_INITIAL_STATE);\n  const [imageUrl, setImageUrl] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { id, name, entries } = user;\n\n  const calculateFaceLocation = (response) => {\n    const clarifaiFace = response.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('input-image');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  const onImageDetect = async (input) => {\n    unstable_batchedUpdates(() => {\n      if (error) setError(null);\n      setLoading(true);\n      setBox(BOX_INITIAL_STATE);\n      setImageUrl(input);\n    });\n    await api\n      .getImageBoundary({ input })\n      .then((response) => {\n        if (response.outputs) {\n          api.updateImageCount({ id }).then((data) => {\n            if (data.count) {\n              const userData = { ...user, entries: Number(data.count) };\n              setUser(userData);\n              setUserOnLocalStorage(userData);\n              const facePosition = calculateFaceLocation(response);\n              setBox({ ...facePosition });\n            } else {\n              setError(data.error);\n            }\n          });\n        } else {\n          setError(response.error);\n        }\n      })\n      .catch(() => setError('Something went wrong. Please try again later.'));\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <Rank name={name} entries={entries} />\n      <Logo />\n      <ImageLinkForm onFormSubmit={onImageDetect} />\n      {imageUrl && (\n        <FaceRecognition box={box} error={error} imageUrl={imageUrl} loading={loading} />\n      )}\n    </div>\n  );\n};\n\nHome.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    email: PropTypes.string,\n    entries: PropTypes.number,\n    joined: PropTypes.string,\n  }).isRequired,\n  setUser: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","import Home from './home.page';\n\nexport default Home;\n","import NotFound from './not-found.page';\n\nexport default NotFound;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport './not-found.styles.css';\n\nconst NotFound = () => {\n  const history = useHistory();\n  return (\n    <div className=\"f3 fw6 pt6 pr6 pl6 black-80\">\n      <h1>Oooooppssss.......</h1>\n      <h3>You were not supposed to see this!</h3>\n      <h5>\n        Click{' '}\n        <button type=\"button\" className=\"link-button\" onClick={() => history.push('/')}>\n          here\n        </button>{' '}\n        to go back\n      </h5>\n    </div>\n  );\n};\nexport default NotFound;\n","export const PARTICLE_OPTIONS = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 500,\n      },\n    },\n  },\n};\n\nexport const INPUT_INITIAL_STATE = {\n  value: '',\n  isValid: false,\n  errorText: '',\n  showError: false,\n};\n\nexport const EMAIL = 'email';\nexport const PASSWORD = 'password';\n\nexport const NAME_ERROR_MESSAGE = 'Name cannot be empty';\nexport const EMAIL_ERROR_MESSAGE = 'Please enter a valid email address';\nexport const PASSWORD_ERROR_MESSAGE = 'Your password must be at least 6 characters long';\n\nexport const EMAIL_REGEX_KEY = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FormButton = ({ children, isValidForm, disabled }) => {\n  const getIsValidFormClass = (isValidForm) => (isValidForm ? 'b bg-lightest-blue grow' : '');\n\n  const validClass = getIsValidFormClass(isValidForm);\n\n  return (\n    <button\n      className={`ph3 pv2 mt3 ba b--black f6 dib ${validClass}`}\n      type=\"submit\"\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n\nFormButton.propTypes = {\n  isValidForm: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  disabled: PropTypes.bool,\n};\n\nFormButton.defaultProps = {\n  isValidForm: false,\n  disabled: false,\n};\n\nexport default FormButton;\n","import FormButton from './form-button.component';\n\nexport default FormButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { capitalizeFirstLetter } from '../../../utils/functions.utils';\n\nconst FormInput = ({ name, type, errorData, isTopInput, onChange, onBlur }) => {\n  const { errorText, showError } = errorData;\n  const errorClass = () => (showError ? 'b--red' : '');\n\n  return (\n    <div className={!isTopInput ? 'mt4' : ''} data-testid=\"form-input\">\n      <label className=\"db fw6 lh-copy mv2\" htmlFor={name}>\n        {capitalizeFirstLetter(name)}\n        <input\n          data-testid={`${name}-input`}\n          className={`pa2 mb0 ba bg-white w-100 br2 ${errorClass}`}\n          type={type}\n          name={name}\n          id={name}\n          onChange={(event) => onChange(name, event)}\n          onBlur={() => onBlur(name)}\n        />\n        {showError && (\n          <p className=\"red f6 absolute mv0 right-0 left-0\" role=\"alert\">\n            {errorText}\n          </p>\n        )}\n      </label>\n    </div>\n  );\n};\n\nFormInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  errorData: PropTypes.shape({\n    showError: PropTypes.bool,\n    errorText: PropTypes.string,\n  }).isRequired,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  isTopInput: PropTypes.bool,\n};\n\nFormInput.defaultProps = {\n  type: 'text',\n  onChange: () => {},\n  onBlur: () => {},\n  isTopInput: false,\n};\n\nexport default FormInput;\n","import FormInput from './form-input-component';\n\nexport default FormInput;\n","import UserForm from './user-form.component';\n\nexport default UserForm;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport api from '../../utils/api.utils';\nimport { EMAIL_REGEX_KEY } from '../../utils/constants.utils';\nimport { capitalizeFirstLetter, setUserOnLocalStorage } from '../../utils/functions.utils';\n\nimport ErrorDisplay from '../ErrorDisplay';\nimport FormButton from '../Buttons/FormButton';\nimport FormInput from '../Inputs/FormInput';\n\nconst UserForm = ({ fields, type, loadUser }) => {\n  const isSignInForm = type === 'sign in';\n  const history = useHistory();\n  const [error, setError] = useState(null);\n  const fieldsList = Object.values(fields);\n\n  const isValidForm = fieldsList.every((field) => field.isValid);\n\n  const isFieldValid = (fieldName, value) => {\n    const validators = {\n      name: value.length > 0,\n      email: EMAIL_REGEX_KEY.test(String(value).toLowerCase()),\n      password: value.length >= 6,\n    };\n\n    return validators[fieldName];\n  };\n\n  const onFieldChange = (fieldName, event) => {\n    const input = fields[fieldName];\n    const isValid = isFieldValid(fieldName, event.target.value);\n    fields[fieldName].setField({\n      ...input,\n      value: event.target.value,\n      isValid,\n      showError: input.showError && !isValid,\n    });\n  };\n\n  const validateInput = (fieldName) => {\n    const input = fields[fieldName];\n    fields[fieldName].setField({ ...input, showError: !input.isValid });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    const fieldValues = fieldsList.reduce(\n      (acc, field) => ({ ...acc, [field.name]: field.value }),\n      {}\n    );\n    const submitAction = isSignInForm ? api.signInUser : api.registerUser;\n    submitAction(fieldValues)\n      .then((response) => {\n        if (response?.id) {\n          loadUser(response);\n          setUserOnLocalStorage(response);\n        } else {\n          setError(response.error);\n        }\n      })\n      .catch(() => setError('Something went wrong. Please try again later.'));\n  };\n\n  return (\n    <form\n      className=\"br3 ba b--black-10 mv4 mw6 shadow-5 center smaller\"\n      onSubmit={onSubmit}\n      data-testid=\"user-form\"\n    >\n      <main className=\"pv3 ph4 black-80\">\n        <fieldset id=\"sign-in\" className=\"ba b--transparent ph0 mh0\">\n          <h2 className=\"f2 ph0 ma0 noselect\">{capitalizeFirstLetter(type)}</h2>\n          {error && <ErrorDisplay error={error} />}\n          {fieldsList.map((field) => {\n            const { name, id, type, showError, errorText } = field;\n            return (\n              <FormInput\n                key={id}\n                name={name}\n                type={type}\n                errorData={{ showError: showError, errorText: errorText }}\n                isTopInput={id === 1}\n                onChange={onFieldChange}\n                onBlur={validateInput}\n              />\n            );\n          })}\n        </fieldset>\n        <div className=\"flex flex-column items-center\">\n          <FormButton isValidForm={isValidForm} disabled={!isValidForm}>\n            {capitalizeFirstLetter(type)}\n          </FormButton>\n          {isSignInForm && (\n            <button\n              className=\"f5 dim black lh-copy mt3 link b--none bg-transparent\"\n              type=\"button\"\n              onClick={() => history.push('/register')}\n            >\n              Register now, it's free!\n            </button>\n          )}\n        </div>\n      </main>\n    </form>\n  );\n};\n\nUserForm.propTypes = {\n  fields: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      errorText: PropTypes.string,\n      value: PropTypes.string,\n      isValid: PropTypes.bool,\n      showError: PropTypes.bool,\n      type: PropTypes.string,\n      setField: PropTypes.func,\n    })\n  ).isRequired,\n  type: PropTypes.string.isRequired,\n  loadUser: PropTypes.func.isRequired,\n};\n\nexport default UserForm;\n","import Register from './register.page';\n\nexport default Register;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  EMAIL,\n  PASSWORD,\n  INPUT_INITIAL_STATE,\n  NAME_ERROR_MESSAGE,\n  EMAIL_ERROR_MESSAGE,\n  PASSWORD_ERROR_MESSAGE,\n} from '../../utils/constants.utils';\n\nimport UserForm from '../../components/UserForm';\n\nconst Register = ({ loadUser }) => {\n  const [name, setName] = useState({ ...INPUT_INITIAL_STATE, errorText: NAME_ERROR_MESSAGE });\n  const [email, setEmail] = useState({\n    ...INPUT_INITIAL_STATE,\n    errorText: EMAIL_ERROR_MESSAGE,\n  });\n  const [password, setPassword] = useState({\n    ...INPUT_INITIAL_STATE,\n    errorText: PASSWORD_ERROR_MESSAGE,\n  });\n\n  const fields = {\n    name: {\n      id: 1,\n      name: 'name',\n      ...name,\n      type: 'text',\n      setField: setName,\n    },\n    email: {\n      id: 2,\n      name: EMAIL,\n      ...email,\n      type: EMAIL,\n      setField: setEmail,\n    },\n    password: {\n      id: 3,\n      name: PASSWORD,\n      ...password,\n      type: PASSWORD,\n      setField: setPassword,\n    },\n  };\n\n  return <UserForm fields={fields} type=\"register\" loadUser={loadUser} />;\n};\n\nRegister.propTypes = {\n  loadUser: PropTypes.func.isRequired,\n};\n\nexport default Register;\n","import SignIn from './sign-in.page';\n\nexport default SignIn;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  EMAIL,\n  PASSWORD,\n  INPUT_INITIAL_STATE,\n  EMAIL_ERROR_MESSAGE,\n  PASSWORD_ERROR_MESSAGE,\n} from '../../utils/constants.utils';\n\nimport UserForm from '../../components/UserForm';\n\nconst SignIn = ({ loadUser }) => {\n  const [email, setEmail] = useState({\n    ...INPUT_INITIAL_STATE,\n    errorText: EMAIL_ERROR_MESSAGE,\n  });\n\n  const [password, setPassword] = useState({\n    ...INPUT_INITIAL_STATE,\n    errorText: PASSWORD_ERROR_MESSAGE,\n  });\n\n  const fields = {\n    email: {\n      id: 1,\n      name: EMAIL,\n      ...email,\n      type: EMAIL,\n      setField: setEmail,\n    },\n    password: {\n      id: 2,\n      name: PASSWORD,\n      ...password,\n      type: PASSWORD,\n      setField: setPassword,\n    },\n  };\n  return <UserForm fields={fields} type=\"sign in\" loadUser={loadUser} />;\n};\n\nSignIn.propTypes = {\n  loadUser: PropTypes.func.isRequired,\n};\n\nexport default SignIn;\n","import React, { useState, useEffect } from 'react';\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport Particles from 'react-particles-js';\n\nimport Header from '../components/Header';\nimport Home from '../pages/Home';\nimport NotFound from '../pages/NotFound';\nimport Register from '../pages/Register';\nimport SignIn from '../pages/SignIn';\nimport { PARTICLE_OPTIONS } from '../utils/constants.utils';\nimport { getUserFromLocalStorage } from '../utils/functions.utils';\nimport 'tachyons';\nimport './App.css';\n\nconst INITIAL_USER_DATA = {\n  id: 0,\n  name: '',\n  email: '',\n  entries: 0,\n  joined: '',\n};\n\nconst App = () => {\n  const [user, setUser] = useState(INITIAL_USER_DATA);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const loggedInUser = getUserFromLocalStorage();\n    if (loggedInUser) {\n      const foundUser = JSON.parse(loggedInUser);\n      setUser({ ...foundUser, entries: Number(foundUser.entries) });\n      history.push('/home');\n    }\n  }, [history]);\n\n  const loadUser = (data) => {\n    setUser({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: Number(data.entries),\n      joined: data.joined,\n    });\n    history.push('/home');\n  };\n\n  const clearUser = () => setUser(INITIAL_USER_DATA);\n\n  const isUserSignedIn = !!user.id;\n\n  return (\n    <div className=\"App\">\n      <Particles className=\"particles\" params={PARTICLE_OPTIONS} />\n      <Header isUserSignedIn={isUserSignedIn} clearUser={clearUser} />\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to={isUserSignedIn ? '/home' : '/signin'} />\n        </Route>\n        <Route path=\"/signin\" render={() => <SignIn loadUser={loadUser} />} />\n        <Route path=\"/register\" render={() => <Register loadUser={loadUser} />} />\n        <Route\n          path=\"/home\"\n          render={() =>\n            isUserSignedIn ? (\n              <Home user={user} setUser={setUser} />\n            ) : (\n              <Redirect to={{ pathname: '/signin' }} />\n            )\n          }\n        />\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}